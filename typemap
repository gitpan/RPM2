TYPEMAP
rpmdb			O_OBJECT_rpmdb
rpmdbMatchIterator	O_OBJECT_rpmmi
Header                  O_OBJECT_header
rpmts			O_OBJECT_rpmts
rpmprobFilterFlags	O_OBJECT_rpmprob_filter_flags
rpmElementType		O_OBJECT_rpm_element_type

INPUT
O_OBJECT_rpmdb
    if (sv_isobject($arg) && (SvTYPE(SvRV($arg)) == SVt_PVMG))
        $var = ($type)SvIV((SV*)SvRV( $arg ));
    else {
        warn( \"${Package}::$func_name() -- $var is not a blessed SV reference\" );
        XSRETURN_UNDEF;
    }

O_OBJECT_rpmmi
    if (sv_isobject($arg) && (SvTYPE(SvRV($arg)) == SVt_PVMG))
        $var = ($type)SvIV((SV*)SvRV( $arg ));
    else {
        warn( \"${Package}::$func_name() -- $var is not a blessed SV reference\" );
        XSRETURN_UNDEF;
    }

O_OBJECT_header
    if (sv_isobject($arg) && (SvTYPE(SvRV($arg)) == SVt_PVMG))
        $var = ($type)SvIV((SV*)SvRV( $arg ));
    else {
        warn( \"${Package}::$func_name() -- $var is not a blessed SV reference\" );
        XSRETURN_UNDEF;
    }

O_OBJECT_rpmts
    if (sv_isobject($arg) && (SvTYPE(SvRV($arg)) == SVt_PVMG))
        $var = ($type)SvIV((SV*)SvRV( $arg ));
    else {
        warn( \"${Package}::$func_name() -- $var is not a blessed SV reference\" );
        XSRETURN_UNDEF;
    }

O_OBJECT_rpmprob_filter_flags
	$var = ($type) SvIV($arg);

O_OBJECT_rpm_element_type
	$var = ($type) SvIV($arg);

OUTPUT
O_OBJECT_rpmdb
        sv_setref_pv( $arg, "RPM2::C::DB", (void*)$var );
O_OBJECT_rpmmi
        sv_setref_pv( $arg, "RPM2::C::PackageIterator", (void*)$var );
O_OBJECT_header
        sv_setref_pv( $arg, "RPM2::C::Header", (void*)$var );
O_OBJECT_rpmts
        sv_setref_pv( $arg, "RPM2::C::Transaction", (void*)$var );
O_OBJECT_rpmprob_filter_flags
	sv_setiv($arg, (IV)$var);
O_OBJECT_rpm_element_type
	sv_setiv($arg, (IV)$var);
